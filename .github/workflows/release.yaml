name: release

on:
  push:
    branches:
      - master
      - release/*
    paths-ignore:
      - README.md

jobs:
  release:
    runs-on: ubuntu-latest
    name: Build and release a new Git tag
    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1
      - name: Release
        id: release
        run: |
          ./gradlew release \
              -Prelease.customUsername=${{ github.actor }} \
              -Prelease.customPassword=${{ github.token }}
          echo "CURRENT_VERSION=$(./gradlew currentVersion -q -Prelease.quiet)" >> $GITHUB_ENV
          echo "### Version ${CURRENT_VERSION} released! :rocket:" >> $GITHUB_STEP_SUMMARY
      - name: Create release branch for a new created git tag
        if: github.ref == 'refs/heads/master'
        uses: peterjgrainger/action-create-branch@v2.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: 'refs/heads/release/${{ env.CURRENT_VERSION }}'

  deploy:
    runs-on: ubuntu-latest
    name: Deploy environment
    defaults:
      run:
        working-directory: deploy/terraform
    steps:
      - uses: actions/checkout@v2
        name: Checkout
      - uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform Init
        id: init
        run: terraform init
      - name: Deploy terraform
        if: github.ref == 'refs/heads/master'
        run: terraform apply -auto-approve
